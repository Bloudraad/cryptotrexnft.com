{"mappings":"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","sources":["js/stake.js"],"sourcesContent":["import os from './contracts/ERC1155Test.json';\nimport ct from './contracts/CryptoTrex.json';\nimport { config } from './config';\nimport { loadWeb3, web3Address, switchChain } from './web3.js';\nimport Web3 from 'web3';\n\nconst formatEther = (value) =>\n  new Number(Web3.utils.fromWei(value, 'ether')).toFixed(4).toString();\n\nasync function addToken(eth) {\n  const web3 = await loadWeb3();\n  const chainId = await web3.eth.getChainId();\n\n  const tokenAddress = config[chainId].token_address;\n  const tokenSymbol = 'FOSSIL';\n  const tokenDecimals = 18;\n  const tokenImage =\n    'https://gateway.pinata.cloud/ipfs/QmZpPpnuASN7riY1UwVftSMowJAgMbf9x1k9pCaH5buSEQ';\n\n  try {\n    // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n    await eth.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20', // Initially only supports ERC20, but eventually more!\n        options: {\n          address: tokenAddress, // The address that the token is at.\n          symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: tokenDecimals, // The number of decimals in the token\n          image: tokenImage, // A string url of the token logo\n        },\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nlet itemIds = [];\n\nasync function getClaimableRewards(address, c) {\n  return await c.methods.rewards(itemIds).call({ from: address });\n}\n\nasync function claimRewards(btn, address, web3) {\n  btn.disabled = true;\n  btn.textContent = 'Claiming...';\n  btn.classList = 'nes-btn is-disabled';\n\n  const chainId = await web3.eth.getChainId();\n  const c = new web3.eth.Contract(ct.abi, config[chainId].migration_address, {\n    gasLimit: (90000 + 15000 * itemIds.length).toString(),\n  });\n  c.methods\n    .claim(itemIds)\n    .send({ from: address })\n    .on('receipt', async () => {\n      btn.disabled = true;\n      btn.classList = 'nes-btn is-success';\n      btn.textContent = 'Claimed';\n      const rewardsView = document.getElementById('claimableRewardsTxt');\n      const rewards = await getClaimableRewards(address, c);\n      rewardsView.textContent = `${formatEther(rewards)} $FOSSIL`;\n      setTimeout(() => {\n        btn.disabled = false;\n        btn.classList = 'nes-btn is-primary';\n        btn.textContent = 'Claim';\n      }, 3000);\n    })\n    .on('transactionHash', (hash) => {\n      btn.disabled = false;\n      btn.textContent = 'Claiming...';\n      btn.classList = 'nes-btn';\n      btn.addEventListener('click', () => {\n        window.open(`https://etherscan.io/tx/${hash}`, '_blank').focus();\n      });\n    })\n    .on('error', () => {\n      btn.disabled = true;\n      btn.textContent = 'Failed';\n      btn.classList = 'nes-btn is-error';\n      setTimeout(() => {\n        btn.disabled = false;\n        btn.classList = 'nes-btn is-primary';\n        btn.textContent = 'Claim';\n      }, 3000);\n    });\n}\n\nasync function getV2Items(address, opensea, newCollection) {\n  const url = `${opensea}/api/v1/assets?offset=0&limit=50&collection=${newCollection}&owner=${address}`;\n  const res = await fetch(url);\n  const body = await res.json();\n  return body.assets;\n}\n\nasync function renderItems(address, web3, c) {\n  const chainId = await web3.eth.getChainId();\n  const v2 = await getV2Items(\n    address,\n    config[chainId].opensea_api,\n    config[chainId].new_collection,\n  );\n\n  const list = document.getElementById('card-list');\n  if (web3.currentProvider.isMetaMask) {\n    const addTokenBtn = document.getElementById('addTokenBtn');\n    addTokenBtn.hidden = false;\n  }\n\n  if (v2) {\n    v2.forEach((e) => {\n      itemIds.push(e.token_id);\n      list.appendChild(buildCard(e));\n    });\n  }\n\n  const rewardsView = document.getElementById('claimableRewardsTxt');\n  const rewards = await getClaimableRewards(address, c);\n  rewardsView.textContent = `${formatEther(rewards)} $FOSSIL`;\n}\n\nfunction buildCard(e) {\n  const card = document.createElement('div');\n  card.classList = 'nes-container item-card is-rounded';\n  card.style = 'background-color: white; display: block;';\n  const imageContainer = document.createElement('a');\n  imageContainer.classList = 'nes-container is-rounded';\n  imageContainer.href = e.permalink;\n  imageContainer.target = '_blank';\n  imageContainer.style =\n    'background-color: white; padding: 0px !important; display: flex; justify-content: center';\n  const image = document.createElement('img');\n  image.src = e.image_thumbnail_url;\n  image.crossOrigin = 'anonymous';\n  image.style.width = '100%';\n  imageContainer.appendChild(image);\n  const nameDiv = document.createElement('p');\n  nameDiv.classList.add('pt-1');\n  nameDiv.textContent = e.name;\n  card.appendChild(imageContainer);\n  card.appendChild(nameDiv);\n\n  const cardContainer = document.createElement('div');\n  cardContainer.classList.add('col-md-3', 'col-xs-6', 'pb-1');\n  cardContainer.appendChild(card);\n\n  return cardContainer;\n}\n\nwindow.onload = async () => {\n  try {\n    const web3 = await loadWeb3();\n    const address = await web3Address(web3);\n    const chainId = await web3.eth.getChainId();\n    const c = new web3.eth.Contract(ct.abi, config[chainId].migration_address);\n    await switchChain(window.ethereum);\n    await renderItems(address, web3, c);\n\n    const claimBtn = document.getElementById('claimBtn');\n    claimBtn.addEventListener(\n      'click',\n      async () => await claimRewards(claimBtn, address, web3),\n    );\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst addTokenBtn = document.getElementById('addTokenBtn');\naddTokenBtn.addEventListener('click', async () => {\n  await addToken(window.ethereum);\n});\n"],"names":["$d1b5347caedcf760$var$formatEther","value","Number","$parcel$interopDefault","$6LYZy","utils","fromWei","toFixed","toString","$d1b5347caedcf760$var$itemIds","$d1b5347caedcf760$var$getClaimableRewards","address","c","methods","rewards","call","from","$d1b5347caedcf760$var$renderItems","web3","chainId","eth","getChainId","v2","opensea","newCollection","url","res","fetch","json","assets","$d1b5347caedcf760$var$getV2Items","$71KSP","config","opensea_api","new_collection","list","document","getElementById","currentProvider","isMetaMask","hidden","forEach","e","push","token_id","appendChild","card","createElement","classList","style","imageContainer","href","permalink","target","image","src","image_thumbnail_url","crossOrigin","width","nameDiv","add","textContent","name","cardContainer","$d1b5347caedcf760$var$buildCard","rewardsView","window","onload","async","$7VRcZ","loadWeb3","web3Address","Contract","$2tNqr","abi","migration_address","switchChain","ethereum","claimBtn","addEventListener","btn","disabled","gasLimit","length","claim","send","on","setTimeout","hash","open","focus","$d1b5347caedcf760$var$claimRewards","err","console","log","tokenAddress","token_address","request","method","params","type","options","symbol","decimals","error","$d1b5347caedcf760$var$addToken"],"version":3,"file":"stake.cc1accd6.js.map"}