{"mappings":"+eACAA,4BAEMC,WAEN,MAAMC,EAAS,GAAYC,OAAiBC,wBACtCC,SACN,MAAMC,EAASC,EAAcC,KAEvBC,EAAOC,SAASC,eAAe,QACrC,IAAIC,GAAY,EACZC,GAAY,EACZC,EAAU,EACVC,EAAQ,KACZ,MAAMC,EAAUN,SAASO,cAAc,kBAevCD,EAAQE,iBACN,UACA,uBAdA,MAAMC,EAAcH,EAAQI,UAAYC,OAAOC,WAC/CZ,SAASa,iBAAiB,uBAAuBC,SAAO,CAAEC,EAAGC,KACvDA,EAAIP,EAAc,IACpBM,EAAEE,MAAMC,QAAU,EAClBH,EAAEE,MAAME,UAAY,cAEpBJ,EAAEE,MAAMC,QAAU,EAClBH,EAAEE,MAAME,UAAY,oBAQtBC,GAEc,OAAVf,GACFgB,aAAahB,GAGfH,GAAY,EACZ,MAAMoB,EAAgBhB,EAAQI,UAAYC,OAAOC,WAC3CW,EAAYZ,OAAOC,WAAa,EAEtC,GAAIU,EAAgBC,EAAY,KAAOD,EAAgBC,EAAY,IAAK,CACtErB,GAAY,EACZ,MAAMsB,EAAS,IAAMC,KAAKC,IAAIJ,EAAgBC,EAAW,GAAK,MAC9DxB,EAAKkB,MAAMU,OAAM,GAAM,IAAOhB,OAAOiB,YAAcJ,WAEnDzB,EAAKkB,MAAMU,OAAY,IAAOhB,OAAOiB,YAApB,KAGnBvB,EAAQwB,YAAW,WACjB3B,GAAY,IACX,OAEL,GAGF,IAAI4B,EAAQ,EACRC,EAAQ,EACZ/B,SAASQ,iBAAiB,aAAa,SAAUwB,GAC/C,MAAMC,EAAQD,EAAEE,QAAQ,GAAGC,QAAUJ,EAC/BK,EAAQJ,EAAEE,QAAQ,GAAGG,QAAUP,EACrCC,EAAQC,EAAEE,QAAQ,GAAGC,QACrBL,EAAQE,EAAEE,QAAQ,GAAGG,QAErB,MAAMC,EAAOb,KAAKc,IAAIN,GAASR,KAAKc,IAAIH,GAASH,EAAQG,EAEnDI,EAAef,KAAKgB,MAAMnC,EAAQI,UAAYC,OAAOC,YAC3DN,EAAQoC,SAAS,CACfC,KAAMH,EAAeF,EAAOb,KAAKc,IAAID,IAAS3B,OAAOC,WACrDgC,SAAU,cAGd5C,SAASQ,iBAAiB,WAAW,SAAUwB,GAC7C,MAAMQ,EAAef,KAAKgB,MAAMnC,EAAQI,UAAYC,OAAOC,YAC7C,eAAVoB,EAAEa,KAAwBL,EAAe,EAC3ClC,EAAQoC,SAAS,CACfC,KAAMH,EAAe,GAAK7B,OAAOC,WACjCgC,SAAU,WAEO,cAAVZ,EAAEa,KAAuBL,EAAe,GACjDlC,EAAQoC,SAAS,CACfC,KAAMH,EAAe,GAAK7B,OAAOC,WACjCgC,SAAU,cAKhBE,aAAW,KACJ5C,GAAcC,GAInBJ,EAAKgD,IAAMvD,EAAOY,GAClBA,GAAWA,EAAU,GAAKZ,EAAOwD,QAJ3BjD,EAAKgD,MAAQnD,IAAWG,EAAKgD,IAAMnD,KAKxC,KAEH,MAAMqD,EAAUjD,SAASC,eAAe,YACxCgD,EAAQzC,iBAAiB,SAAO,KAC9ByC,EAAQC,SACR,MAAMC,EAASnD,SAASO,cAAc,UACtCP,SAASO,cAAc,YAAYU,MAAMmC,MAAQ,QACjDpD,SAASO,cAAc,YAAYU,MAAMoC,aAAe,SACxDlD,GAAY,EACZJ,EAAKkB,MAAMxB,KAAO,EAClBoC,YAAU,KACR7B,SACGa,iBAAiB,yDACjBC,SAASC,GAAMA,EAAEmC,WACpB/C,GAAY,EACZH,SAASO,cAAc,UAAU+C,WAAS","sources":["js/jumpy-trex.js"],"sourcesContent":["const smoothscroll = require('smoothscroll-polyfill');\nsmoothscroll.polyfill();\n\nconst { DINO_COLOR } = require('./preload');\n\nconst photos = [DINO_COLOR.left, DINO_COLOR.right];\nconst { initGame } = require('../game');\nconst idlePhoto = DINO_COLOR.idle;\n\nconst dino = document.getElementById('dino');\nlet isRunning = false;\nlet isPregame = false;\nlet counter = 0;\nlet timer = null;\nconst wrapper = document.querySelector('.outer-wrapper');\n\nfunction easeInBubble() {\n  const scrollRatio = wrapper.scrollTop / window.innerWidth;\n  document.querySelectorAll('.slide .nes-balloon').forEach((v, i) => {\n    if (i < scrollRatio - 0.5) {\n      v.style.opacity = 1;\n      v.style.transform = 'rotate(0)';\n    } else {\n      v.style.opacity = 0;\n      v.style.transform = 'rotate(45deg)';\n    }\n  });\n}\n\nwrapper.addEventListener(\n  'scroll',\n  function () {\n    easeInBubble();\n\n    if (timer !== null) {\n      clearTimeout(timer);\n    }\n\n    isRunning = true;\n    const currentScroll = wrapper.scrollTop % window.innerWidth;\n    const midScreen = window.innerWidth / 2;\n\n    if (currentScroll < midScreen + 150 && currentScroll > midScreen - 150) {\n      isRunning = false;\n      const offset = 200 - Math.pow(currentScroll - midScreen, 2) / 112.5;\n      dino.style.bottom = `${0.15 * window.innerHeight + offset}px`;\n    } else {\n      dino.style.bottom = `${0.15 * window.innerHeight}px`;\n    }\n\n    timer = setTimeout(function () {\n      isRunning = false;\n    }, 50);\n  },\n  false,\n);\n\nlet lastX = 0;\nlet lastY = 0;\ndocument.addEventListener('touchmove', function (e) {\n  const yDiff = e.touches[0].clientY - lastY;\n  const xDiff = e.touches[0].clientX - lastX;\n  lastY = e.touches[0].clientY;\n  lastX = e.touches[0].clientX;\n\n  const diff = Math.abs(yDiff) > Math.abs(xDiff) ? yDiff : xDiff;\n\n  const currentSlide = Math.floor(wrapper.scrollTop / window.innerWidth);\n  wrapper.scrollTo({\n    top: (currentSlide - diff / Math.abs(diff)) * window.innerWidth,\n    behavior: 'smooth',\n  });\n});\ndocument.addEventListener('keydown', function (e) {\n  const currentSlide = Math.floor(wrapper.scrollTop / window.innerWidth);\n  if (e.key === 'ArrowRight' && currentSlide < 5) {\n    wrapper.scrollTo({\n      top: (currentSlide + 1) * window.innerWidth,\n      behavior: 'smooth',\n    });\n  } else if (e.key === 'ArrowLeft' && currentSlide > 0) {\n    wrapper.scrollTo({\n      top: (currentSlide - 1) * window.innerWidth,\n      behavior: 'smooth',\n    });\n  }\n});\n\nsetInterval(() => {\n  if (!isRunning && !isPregame) {\n    if (dino.src !== idlePhoto) dino.src = idlePhoto;\n    return;\n  }\n  dino.src = photos[counter];\n  counter = (counter + 1) % photos.length;\n}, 100);\n\nconst playBtn = document.getElementById('btn-play');\nplayBtn.addEventListener('click', () => {\n  playBtn.remove();\n  const parent = document.querySelector('.slide');\n  document.querySelector('.wrapper').style.width = '100vw';\n  document.querySelector('.wrapper').style.marginBottom = '-100vw';\n  isPregame = true;\n  dino.style.left = 0;\n  setTimeout(() => {\n    document\n      .querySelectorAll('.slide:first-child div:not(.ground):not(.underground)')\n      .forEach((v) => v.remove());\n    isPregame = false;\n    document.querySelector('.slide').innerHTML += `\n      <button class=\"nes-btn is-success\" id=\"jump\">Jump</button>\n      <button class=\"nes-btn is-error\" id=\"duck\">Duck</button>\n    `;\n    initGame(parent);\n  }, 2000);\n});\n"],"names":["polyfill","DINO_COLOR","$d76812dbb6292cf8$var$photos","left","right","initGame","$d76812dbb6292cf8$var$idlePhoto","$d76812dbb6292cf8$require$DINO_COLOR","idle","$d76812dbb6292cf8$var$dino","document","getElementById","$d76812dbb6292cf8$var$isRunning","$d76812dbb6292cf8$var$isPregame","$d76812dbb6292cf8$var$counter","$d76812dbb6292cf8$var$timer","$d76812dbb6292cf8$var$wrapper","querySelector","addEventListener","scrollRatio","scrollTop","window","innerWidth","querySelectorAll","forEach","v","i","style","opacity","transform","$d76812dbb6292cf8$var$easeInBubble","clearTimeout","currentScroll","midScreen","offset","Math","pow","bottom","innerHeight","setTimeout","$d76812dbb6292cf8$var$lastX","$d76812dbb6292cf8$var$lastY","e","yDiff","touches","clientY","xDiff","clientX","diff","abs","currentSlide","floor","scrollTo","top","behavior","key","setInterval","src","length","$d76812dbb6292cf8$var$playBtn","remove","parent","width","marginBottom","innerHTML"],"version":3,"file":"jumpy-trex.56eb8dfb.js.map"}