{"mappings":"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","sources":["js/migrate.js"],"sourcesContent":["import os from './contracts/ERC1155Test.json';\nimport ct from './contracts/CryptoTrex.json';\nimport { config } from './config';\nimport { loadWeb3, web3Address, switchChain } from './web3.js';\nimport Web3 from 'web3';\n\nasync function render(address, web3) {\n  const approved = await isApproved(web3, address);\n  if (approved) {\n    await renderItems(address, web3);\n  } else {\n    await renderApprovalPrompt();\n  }\n}\n\nasync function batchMigrate(ids) {\n  const web3 = await loadWeb3();\n  const address = await web3Address(web3);\n  const chainId = await web3.eth.getChainId();\n  let tokenIds = [];\n  ids.forEach((id) => {\n    tokenIds.push(web3.utils.toBN(id));\n  });\n  if (tokenIds.length < 1) return;\n  const c = new web3.eth.Contract(ct.abi, config[chainId].migration_address);\n  const batchMigrateBtn = document.getElementById('batchMigrateBtn');\n  c.methods\n    .migrateBatch(tokenIds)\n    .send({ from: address })\n    .on('receipt', () => {\n      batchMigrateBtn.disabled = true;\n      batchMigrateBtn.textContent = 'Migrated';\n      batchMigrateBtn.classList = 'nes-btn is-success';\n    })\n    .on('transactionHash', (hash) => {\n      batchMigrateBtn.textContent = 'Migrating...';\n      batchMigrateBtn.classList = 'nes-btn';\n      batchMigrateBtn.addEventListener('click', () => {\n        window.open(`https://etherscan.io/tx/${hash}`, '_blank').focus();\n      });\n    })\n    .on('error', () => {\n      batchMigrateBtn.disabled = true;\n      batchMigrateBtn.textContent = 'Failed';\n      batchMigrateBtn.classList = 'nes-btn is-error';\n    });\n}\n\nasync function isApproved(web3, address) {\n  const chainId = await web3.eth.getChainId();\n  const osc = new web3.eth.Contract(os.abi, config[chainId].origin_address);\n  return await osc.methods\n    .isApprovedForAll(address, config[chainId].migration_address)\n    .call({ from: address });\n}\n\nasync function approve() {\n  const web3 = await loadWeb3();\n  const address = await web3Address(web3);\n  const chainId = await web3.eth.getChainId();\n  const osc = new web3.eth.Contract(os.abi, config[chainId].origin_address);\n  osc.methods\n    .setApprovalForAll(config[chainId].migration_address, true)\n    .send({ from: address })\n    .on('receipt', () => {\n      const approveBtn = document.getElementById('approveBtn');\n      approveBtn.textContent = 'Approved';\n      approveBtn.disabled = true;\n      approveBtn.classList = 'btn btn-success is-disabled';\n      renderItems(address, web3);\n    })\n    .on('transactionHash', (hash) => {\n      const container = document.getElementById('approvalContainer');\n      const viewTx = document.createElement('a');\n      viewTx.classList = 'btn btn-info';\n      viewTx.href = `https://etherscan.io/tx/${hash}`;\n      viewTx.target = '_blank';\n      viewTx.text = 'View Transaction';\n      container.appendChild(viewTx);\n\n      const approveBtn = document.getElementById('approveBtn');\n      approveBtn.textContent = 'Approving...';\n      approveBtn.disabled = true;\n      approveBtn.classList = 'btn btn-primary';\n    });\n}\n\nasync function migrate(id, btn) {\n  const web3 = await loadWeb3();\n  const address = await web3Address(web3);\n  const chainId = await web3.eth.getChainId();\n  const tokenId = web3.utils.toBN(id);\n\n  const c = new web3.eth.Contract(ct.abi, config[chainId].migration_address);\n  c.methods\n    .migrate(tokenId)\n    .send({ from: address })\n    .on('receipt', () => {\n      btn.disabled = true;\n      btn.classList = 'btn btn-success';\n      btn.textContent = 'Migrated';\n    })\n    .on('transactionHash', (hash) => {\n      btn.textContent = 'Migrating...';\n      btn.addEventListener('click', () => {\n        window.open(`https://etherscan.io/tx/${hash}`, '_blank').focus();\n      });\n    })\n    .on('error', () => {\n      btn.disabled = true;\n      btn.textContent = 'Failed';\n      btn.classList = 'btn btn-danger';\n    });\n}\n\nasync function addToken(eth) {\n  const web3 = await loadWeb3();\n  const chainId = await web3.eth.getChainId();\n\n  const tokenAddress = config[chainId].token_address;\n  const tokenSymbol = 'FOSSIL';\n  const tokenDecimals = 18;\n  const tokenImage =\n    'https://gateway.pinata.cloud/ipfs/QmZpPpnuASN7riY1UwVftSMowJAgMbf9x1k9pCaH5buSEQ';\n\n  try {\n    // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n    await eth.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20', // Initially only supports ERC20, but eventually more!\n        options: {\n          address: tokenAddress, // The address that the token is at.\n          symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: tokenDecimals, // The number of decimals in the token\n          image: tokenImage, // A string url of the token logo\n        },\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nlet itemIds = [];\n\nasync function getItems(ownerAddr, baseURL, contractAddr) {\n  const url = `${baseURL}?owner=${ownerAddr}&contractAddresses[]=${contractAddr}`;\n  const res = await fetch(url);\n  const body = await res.json();\n  return body.ownedNfts.map((d) => d.id.tokenId);\n}\n\nasync function renderApprovalPrompt() {\n  const apprView = document.getElementById('approvalView');\n  const migrView = document.getElementById('migrationView');\n  apprView.hidden = false;\n  migrView.hidden = true;\n\n  const web3 = await loadWeb3();\n  const address = await web3Address(web3);\n  const chainId = await web3.eth.getChainId();\n  const v1 = await getItems(\n    address,\n    config[chainId].alchemy_api,\n    config[chainId].origin_address,\n  );\n\n  if (v1.length < 1) {\n    const warning = document.getElementById('warningNoTrex');\n    warning.hidden = false;\n  }\n}\n\nasync function renderItems(address, web3) {\n  const apprView = document.getElementById('approvalView');\n  const migrView = document.getElementById('migrationView');\n  apprView.hidden = true;\n  migrView.hidden = false;\n  const chainId = await web3.eth.getChainId();\n\n  const v1 = await getItems(\n    address,\n    config[chainId].alchemy_api,\n    config[chainId].origin_address,\n  );\n  const v2 = await getItems(\n    address,\n    config[chainId].alchemy_api,\n    config[chainId].migration_address,\n  );\n\n  const list = document.querySelector('#card-list');\n  if (web3.currentProvider.isMetaMask) {\n    const addTokenBtn = document.getElementById('addTokenBtn');\n    addTokenBtn.hidden = false;\n  }\n\n  if (v1) {\n    if (v1.length < 1) {\n      const batchMigrateBtn = document.getElementById('batchMigrateBtn');\n      batchMigrateBtn.textContent = 'Nothing to migrate';\n      batchMigrateBtn.classList = 'btn btn-light is-disabled';\n      batchMigrateBtn.disabled = true;\n    }\n    const c = new web3.eth.Contract(os.abi, config[chainId].origin_address);\n    v1.forEach(async (e) => {\n      itemIds.push(e);\n      const balance = await c.methods\n        .balanceOf(address, Web3.utils.toBN(e))\n        .call({ from: address });\n      const response = await fetch(\n        `${config[chainId].opensea_api}/api/v1/asset/${\n          config[chainId].origin_address\n        }/${Web3.utils.toBN(e)}`,\n        { method: 'GET' },\n      );\n      const body = await response.json();\n      if (balance && balance > 0) {\n        list.appendChild(buildCard(body, false));\n      }\n    });\n  }\n\n  if (v2) {\n    v2.forEach(async (e) => {\n      const response = await fetch(\n        `${config[chainId].opensea_api}/api/v1/asset/${\n          config[chainId].migration_address\n        }/${Web3.utils.toBN(e)}`,\n        { method: 'GET' },\n      );\n      const body = await response.json();\n      list.appendChild(buildCard(body, true));\n    });\n  }\n}\n\nfunction buildCard(e, migrated) {\n  const card = document.createElement('div');\n  card.classList = 'card';\n  card.style = `\n    margin: 4px;\n    background-color: #0a0a0a;\n    color: #fff;\n    border: 1px solid;\n    padding: 24px;\n    border-image-slice: 1;\n    border-image-source: linear-gradient(180deg, #d56730, #d5673041);`;\n  const imageContainer = document.createElement('a');\n  imageContainer.href = e.permalink;\n  imageContainer.target = '_blank';\n  const image = document.createElement('img');\n  image.src = e.image_thumbnail_url;\n  image.crossOrigin = 'anonymous';\n  image.classList = 'card-img-top';\n  imageContainer.appendChild(image);\n  const bodyDiv = document.createElement('div');\n  bodyDiv.classList = 'card-body';\n  const nameDiv = document.createElement('h5');\n  nameDiv.classList.add('card-title');\n  nameDiv.textContent = e.name;\n  const migrateBtn = document.createElement('button');\n  migrateBtn.type = 'button';\n\n  if (!migrated) {\n    migrateBtn.classList = 'btn btn-secondary';\n    migrateBtn.style = 'font-weight: 800; width: 100%;';\n    migrateBtn.textContent = 'Migrate';\n  } else {\n    migrateBtn.classList = 'btn btn-light disabled';\n    migrateBtn.disabled = true;\n    migrateBtn.style = 'width: 100%';\n    migrateBtn.textContent = 'Migrated';\n  }\n  migrateBtn.addEventListener('click', () => migrate(e.token_id, migrateBtn));\n  card.appendChild(imageContainer);\n  bodyDiv.appendChild(nameDiv);\n  bodyDiv.appendChild(migrateBtn);\n  card.appendChild(bodyDiv);\n\n  const cardContainer = document.createElement('div');\n  cardContainer.classList.add('col-md-3', 'col-xs-6', 'pb-1');\n  cardContainer.appendChild(card);\n\n  return cardContainer;\n}\n\nconst batchMigrateBtn = document.getElementById('batchMigrateBtn');\nbatchMigrateBtn.addEventListener('click', async () => {\n  await batchMigrate(itemIds);\n});\n\nwindow.onload = async () => {\n  try {\n    const web3 = await loadWeb3();\n    const address = await web3Address(web3);\n    switchChain(window.ethereum);\n    render(address, web3);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst addTokenBtn = document.getElementById('addTokenBtn');\naddTokenBtn.addEventListener('click', async () => {\n  await addToken(window.ethereum);\n});\n\nconst approveBtn = document.getElementById('approveBtn');\napproveBtn.addEventListener('click', async () => {\n  await approve();\n});\n"],"names":["$56cd91b74de0ab6d$var$render","address","web3","approved","chainId","eth","getChainId","osc","Contract","$parcel$interopDefault","$cSnus","abi","$71KSP","config","origin_address","methods","isApprovedForAll","migration_address","call","from","$56cd91b74de0ab6d$var$isApproved","$56cd91b74de0ab6d$var$renderItems","apprView","document","getElementById","migrView","hidden","$7VRcZ","loadWeb3","web3Address","$56cd91b74de0ab6d$var$getItems","alchemy_api","length","$56cd91b74de0ab6d$var$renderApprovalPrompt","$56cd91b74de0ab6d$var$itemIds","ownerAddr","baseURL","contractAddr","url","res","fetch","json","ownedNfts","map","d","id","tokenId","v1","v2","list","querySelector","currentProvider","isMetaMask","batchMigrateBtn","textContent","classList","disabled","c","forEach","async","e","push","balance","balanceOf","$6LYZy","utils","toBN","response","opensea_api","method","body","appendChild","$56cd91b74de0ab6d$var$buildCard","migrated","card","createElement","style","imageContainer","href","permalink","target","image","src","image_thumbnail_url","crossOrigin","bodyDiv","nameDiv","add","name","migrateBtn","type","addEventListener","btn","$2tNqr","migrate","send","on","hash","window","open","focus","$56cd91b74de0ab6d$var$migrate","token_id","cardContainer","ids","tokenIds","migrateBatch","$56cd91b74de0ab6d$var$batchMigrate","switchChain","ethereum","err","console","log","tokenAddress","token_address","request","params","options","symbol","decimals","error","setApprovalForAll","approveBtn","container","viewTx","text"],"version":3,"file":"migrate.404d1a8a.js.map"}